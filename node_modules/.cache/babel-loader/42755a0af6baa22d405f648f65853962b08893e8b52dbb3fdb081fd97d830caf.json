{"ast":null,"code":"var _jsxFileName = \"/Users/dylan_chandra/React/FinShark/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { searchCompanies } from './api';\nimport './App.css';\nimport CardList from './Components/CardList/CardList';\nimport Navbar from './Components/Navbar/Navbar';\nimport ListPortfolio from './Components/Portfolio/ListPortfolio/ListPortfolio';\nimport Search from './Components/Search/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [portfolioValues, setPortfolioValues] = useState([]);\n  const [searchResult, setSearchResult] = useState([]);\n  const [serverError, setServerError] = useState(null);\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n  };\n  const onSearchSubmit = async e => {\n    e.preventDefault();\n    const result = await searchCompanies(search);\n    if (typeof result === \"string\") {\n      setServerError(result);\n    } else if (Array.isArray(result.data)) {\n      setSearchResult(result.data);\n    }\n    console.log(searchResult);\n    ;\n  };\n  const onPortfolioCreate = e => {\n    e.preventDefault();\n    const exists = portfolioValues.find(value => value === e.target[0].value);\n    if (exists) return;\n    const updatedPortfolio = [...portfolioValues, e.target[0].value];\n    setPortfolioValues(updatedPortfolio);\n  };\n  const onPortfolioDelete = e => {\n    e.preventDefault();\n    const removed = portfolioValues.filter(value => {\n      return value !== e.target[0].value;\n    });\n    setPortfolioValues(removed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearchSubmit: onSearchSubmit,\n      search: search,\n      handleSearchChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListPortfolio, {\n      portfolioValues: portfolioValues,\n      onPortfolioDelete: onPortfolioDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      searchResults: searchResult,\n      onPortfolioCreate: onPortfolioCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Unable to connect to API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QHGxaIPsvEqUp9zV4Dq7KWMJw2A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","searchCompanies","CardList","Navbar","ListPortfolio","Search","jsxDEV","_jsxDEV","App","_s","search","setSearch","portfolioValues","setPortfolioValues","searchResult","setSearchResult","serverError","setServerError","handleSearchChange","e","target","value","onSearchSubmit","preventDefault","result","Array","isArray","data","console","log","onPortfolioCreate","exists","find","updatedPortfolio","onPortfolioDelete","removed","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchResults","_c","$RefreshReg$"],"sources":["/Users/dylan_chandra/React/FinShark/frontend/src/App.tsx"],"sourcesContent":["\nimport { ChangeEvent, SyntheticEvent, useState } from 'react';\nimport { searchCompanies } from './api';\nimport './App.css';\nimport { CompanySearch } from './company';\nimport CardList from './Components/CardList/CardList';\nimport Navbar from './Components/Navbar/Navbar';\nimport ListPortfolio from './Components/Portfolio/ListPortfolio/ListPortfolio';\nimport Search from './Components/Search/Search';\n\nfunction App() {\n  const [search,setSearch] = useState<string>(\"\");\n  const [portfolioValues,setPortfolioValues] = useState<string[]>([]);\n  const [searchResult,setSearchResult] = useState<CompanySearch[]>([]);\n  const [serverError, setServerError] = useState<string | null>(null);\n\n  const handleSearchChange = (e : ChangeEvent<HTMLInputElement>) => {\n      setSearch(e.target.value);\n  };\n\n  const onSearchSubmit = async (e: SyntheticEvent) => {\n      e.preventDefault();\n      const result = await searchCompanies(search);\n      if(typeof result === \"string\"){\n        setServerError(result);\n      } else if(Array.isArray(result.data)){\n        setSearchResult(result.data);\n      }\n      console.log(searchResult);\n;    };\n\nconst onPortfolioCreate = (e:any) => {\n  e.preventDefault();\n  const exists = portfolioValues.find(value => value === e.target[0].value);\n  if(exists) return;\n  const updatedPortfolio =[...portfolioValues,e.target[0].value]\n  setPortfolioValues(updatedPortfolio);\n}\n\nconst onPortfolioDelete = (e: any) =>{\n  e.preventDefault();\n  const removed = portfolioValues.filter((value) =>{\n    return value !== e.target[0].value;\n  });\n  setPortfolioValues(removed);\n}\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Search onSearchSubmit={onSearchSubmit} search = {search} handleSearchChange = {handleSearchChange}/>\n      <ListPortfolio portfolioValues = {portfolioValues} onPortfolioDelete = {onPortfolioDelete}/>\n      <CardList searchResults = {searchResult} onPortfolioCreate = {onPortfolioCreate}/>\n      \n      {serverError && <div>Unable to connect to API</div>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}